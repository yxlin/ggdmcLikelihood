// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_likelihood
Rcpp::List compute_likelihood(const Rcpp::List& dmis, const Rcpp::List& parameter_r, bool debug);
RcppExport SEXP _ggdmcLikelihood_compute_likelihood(SEXP dmisSEXP, SEXP parameter_rSEXP, SEXP debugSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::List& >::type dmis(dmisSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type parameter_r(parameter_rSEXP);
    Rcpp::traits::input_parameter< bool >::type debug(debugSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_likelihood(dmis, parameter_r, debug));
    return rcpp_result_gen;
END_RCPP
}
// compute_subject_likelihood
Rcpp::List compute_subject_likelihood(const Rcpp::S4& dmi, const Rcpp::NumericVector& parameter_r, bool debug);
RcppExport SEXP _ggdmcLikelihood_compute_subject_likelihood(SEXP dmiSEXP, SEXP parameter_rSEXP, SEXP debugSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::S4& >::type dmi(dmiSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type parameter_r(parameter_rSEXP);
    Rcpp::traits::input_parameter< bool >::type debug(debugSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_subject_likelihood(dmi, parameter_r, debug));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ggdmcLikelihood_compute_likelihood", (DL_FUNC) &_ggdmcLikelihood_compute_likelihood, 3},
    {"_ggdmcLikelihood_compute_subject_likelihood", (DL_FUNC) &_ggdmcLikelihood_compute_subject_likelihood, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ggdmcLikelihood(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
